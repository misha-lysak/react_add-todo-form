{"version":3,"sources":["component/Select/Select.jsx","component/Form/Form.jsx","component/Todo/Todo.jsx","component/TodoList/TodoList.jsx","api/users.js","App.js","api/todos.js","index.js"],"names":["Select","selectUserHandler","selectedUserId","users","name","onChange","value","map","user","key","id","Form","props","title","changeTitleHandler","addTodo","method","type","placeholder","onClick","Todo","todo","completed","toString","TodoList","todos","username","email","address","street","suite","city","zipcode","geo","lat","lng","phone","website","company","catchPhrase","bs","todoFromServer","userId","find","App","state","isTitleWritten","isUserWritten","event","target","setState","preventDefault","newTodo","length","className","this","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a0d9520.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Select = ({\n  selectUserHandler,\n  selectedUserId,\n  users,\n}) => (\n  <label>\n    <select\n      name=\"selectedUserId\"\n      onChange={selectUserHandler}\n      value={selectedUserId}\n    >\n      <option>Choose a user</option>\n      {users.map(user => (\n        <option\n          key={user.id}\n          value={user.id}\n        >\n          {user.name}\n        </option>\n      ))}\n    </select>\n  </label>\n);\n\nSelect.propTypes = {\n  selectUserHandler: PropTypes.func.isRequired,\n  selectedUserId: PropTypes.func.isRequired,\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Select } from '../Select';\n\nexport const Form = (props) => {\n  const {\n    selectedUserId,\n    title,\n    changeTitleHandler,\n    selectUserHandler,\n    addTodo,\n    users,\n  } = props;\n\n  return (\n    <>\n      <form method=\"GET\">\n        <label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            placeholder=\"Please enter the title\"\n            value={title}\n            onChange={changeTitleHandler}\n          />\n        </label>\n        <Select\n          selectUserHandler={selectUserHandler}\n          selectedUserId={selectedUserId}\n          users={users}\n        />\n        <button\n          type=\"submit\"\n          onClick={addTodo}\n        >\n          Add\n        </button>\n      </form>\n    </>\n  );\n};\n\nForm.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      id: PropTypes.number.isRequired,\n    }).isRequired,\n  ).isRequired,\n  selectedUserId: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  changeTitleHandler: PropTypes.func.isRequired,\n  selectUserHandler: PropTypes.func.isRequired,\n  addTodo: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Todo = ({ todo }) => (\n  <li>\n    <p>{todo.title}</p>\n    {todo.user.name && (\n      <p>\n        {todo.user.name}\n      </p>\n    )}\n    <p>{todo.completed.toString()}</p>\n  </li>\n);\n\nTodo.propTypes = {\n  todo: PropTypes.shape({\n    userId: PropTypes.number.isRequired,\n    id: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    completed: PropTypes.bool.isRequired,\n    user: PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Todo } from '../Todo';\n\nexport const TodoList = ({ todos }) => (\n  <ul>\n    {todos.map(todo => (\n      <Todo todo={todo} key={todo.id} />\n    ))}\n  </ul>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      userId: PropTypes.number.isRequired,\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool.isRequired,\n      user: PropTypes.shape({\n        id: PropTypes.number.isRequired,\n        name: PropTypes.string.isRequired,\n      }).isRequired,\n    }).isRequired,\n  ).isRequired,\n};\n","const users = [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n    address: {\n      street: 'Kulas Light',\n      suite: 'Apt. 556',\n      city: 'Gwenborough',\n      zipcode: '92998-3874',\n      geo: {\n        lat: '-37.3159',\n        lng: '81.1496',\n      },\n    },\n    phone: '1-770-736-8031 x56442',\n    website: 'hildegard.org',\n    company: {\n      name: 'Romaguera-Crona',\n      catchPhrase: 'Multi-layered client-server neural-net',\n      bs: 'harness real-time e-markets',\n    },\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n    address: {\n      street: 'Victor Plains',\n      suite: 'Suite 879',\n      city: 'Wisokyburgh',\n      zipcode: '90566-7771',\n      geo: {\n        lat: '-43.9509',\n        lng: '-34.4618',\n      },\n    },\n    phone: '010-692-6593 x09125',\n    website: 'anastasia.net',\n    company: {\n      name: 'Deckow-Crist',\n      catchPhrase: 'Proactive didactic contingency',\n      bs: 'synergize scalable supply-chains',\n    },\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n    address: {\n      street: 'Douglas Extension',\n      suite: 'Suite 847',\n      city: 'McKenziehaven',\n      zipcode: '59590-4157',\n      geo: {\n        lat: '-68.6102',\n        lng: '-47.0653',\n      },\n    },\n    phone: '1-463-123-4447',\n    website: 'ramiro.info',\n    company: {\n      name: 'Romaguera-Jacobson',\n      catchPhrase: 'Face to face bifurcated interface',\n      bs: 'e-enable strategic applications',\n    },\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n    address: {\n      street: 'Hoeger Mall',\n      suite: 'Apt. 692',\n      city: 'South Elvis',\n      zipcode: '53919-4257',\n      geo: {\n        lat: '29.4572',\n        lng: '-164.2990',\n      },\n    },\n    phone: '493-170-9623 x156',\n    website: 'kale.biz',\n    company: {\n      name: 'Robel-Corkery',\n      catchPhrase: 'Multi-tiered zero tolerance productivity',\n      bs: 'transition cutting-edge web services',\n    },\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n    address: {\n      street: 'Skiles Walks',\n      suite: 'Suite 351',\n      city: 'Roscoeview',\n      zipcode: '33263',\n      geo: {\n        lat: '-31.8129',\n        lng: '62.5342',\n      },\n    },\n    phone: '(254)954-1289',\n    website: 'demarco.info',\n    company: {\n      name: 'Keebler LLC',\n      catchPhrase: 'User-centric fault-tolerant solution',\n      bs: 'revolutionize end-to-end systems',\n    },\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n    address: {\n      street: 'Norberto Crossing',\n      suite: 'Apt. 950',\n      city: 'South Christy',\n      zipcode: '23505-1337',\n      geo: {\n        lat: '-71.4197',\n        lng: '71.7478',\n      },\n    },\n    phone: '1-477-935-8478 x6430',\n    website: 'ola.org',\n    company: {\n      name: 'Considine-Lockman',\n      catchPhrase: 'Synchronised bottom-line interface',\n      bs: 'e-enable innovative applications',\n    },\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n    address: {\n      street: 'Rex Trail',\n      suite: 'Suite 280',\n      city: 'Howemouth',\n      zipcode: '58804-1099',\n      geo: {\n        lat: '24.8918',\n        lng: '21.8984',\n      },\n    },\n    phone: '210.067.6132',\n    website: 'elvis.io',\n    company: {\n      name: 'Johns Group',\n      catchPhrase: 'Configurable multimedia task-force',\n      bs: 'generate enterprise e-tailers',\n    },\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n    address: {\n      street: 'Ellsworth Summit',\n      suite: 'Suite 729',\n      city: 'Aliyaview',\n      zipcode: '45169',\n      geo: {\n        lat: '-14.3990',\n        lng: '-120.7677',\n      },\n    },\n    phone: '586.493.6943 x140',\n    website: 'jacynthe.com',\n    company: {\n      name: 'Abernathy Group',\n      catchPhrase: 'Implemented secondary concept',\n      bs: 'e-enable extensible e-tailers',\n    },\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n    address: {\n      street: 'Dayna Park',\n      suite: 'Suite 449',\n      city: 'Bartholomebury',\n      zipcode: '76495-3109',\n      geo: {\n        lat: '24.6463',\n        lng: '-168.8889',\n      },\n    },\n    phone: '(775)976-6794 x41206',\n    website: 'conrad.com',\n    company: {\n      name: 'Yost and Sons',\n      catchPhrase: 'Switchable contextually-based project',\n      bs: 'aggregate real-time technologies',\n    },\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n    address: {\n      street: 'Kattie Turnpike',\n      suite: 'Suite 198',\n      city: 'Lebsackbury',\n      zipcode: '31428-2261',\n      geo: {\n        lat: '-38.2386',\n        lng: '57.2232',\n      },\n    },\n    phone: '024-648-3804',\n    website: 'ambrose.net',\n    company: {\n      name: 'Hoeger LLC',\n      catchPhrase: 'Centralized empowering task-force',\n      bs: 'target end-to-end models',\n    },\n  },\n];\n\nexport default users;\n","import React from 'react';\nimport { Form } from './component/Form';\nimport { TodoList } from './component/TodoList';\nimport './App.css';\n\nimport users from './api/users';\nimport todos from './api/todos';\n\nconst todoFromServer = todos.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId),\n}));\n\nexport class App extends React.Component {\n  state = {\n    todos: todoFromServer,\n    selectedUserId: 0,\n    title: '',\n    isTitleWritten: false,\n    isUserWritten: false,\n  }\n\n  changeTitleHandler = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: value,\n      isTitleWritten: false,\n    });\n  }\n\n  selectUserHandler = (event) => {\n    const { name, value } = event.target;\n\n    this.setState({\n      [name]: +value,\n      isUserWritten: false,\n    });\n  }\n\n  addTodo = (event) => {\n    const { title, selectedUserId, isTitleWritten, isUserWritten } = this.state;\n\n    event.preventDefault();\n\n    if (!title || selectedUserId === 0) {\n      this.setState({\n        isTitleWritten: !isTitleWritten,\n        isUserWritten: isUserWritten !== 0,\n      });\n\n      return;\n    }\n\n    this.setState((state) => {\n      const newTodo = {\n        id: state.todos.length + 1,\n        title,\n        completed: false,\n        userId: selectedUserId,\n        user: users.find(user => user.id === selectedUserId),\n      };\n\n      return ({\n        selectedUserId: 0,\n        title: '',\n        todos: [...state.todos, newTodo],\n      });\n    });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Add todo form</h1>\n        <Form\n          users={users}\n          addTodo={this.addTodo}\n          changeTitleHandler={this.changeTitleHandler}\n          selectUserHandler={this.selectUserHandler}\n          selectedUserId={this.state.selectedUserId}\n          title={this.state.title}\n          isTitleWritten={this.state.isTitleWritten}\n          isUserWritten={this.state.isUserWritten}\n        />\n        <TodoList todos={this.state.todos} />\n        {this.state.isTitleWritten && (\n          <div className=\"isTitleWritten\">Dude, write some title</div>\n        )}\n        {this.state.isUserWritten && (\n          <div className=\"isUserWritten\">Mate, u didnt choose user</div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable max-len */\n\nconst todos = [\n  {\n    userId: 1,\n    id: 1,\n    title: 'delectus aut autem',\n    completed: false,\n  },\n  {\n    userId: 1,\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n  },\n];\n\nexport default todos;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}